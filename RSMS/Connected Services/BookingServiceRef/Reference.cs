//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RSMS.BookingServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/RSMSMODELS.Models")]
    [System.SerializableAttribute()]
    public partial class Booking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BookingDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpecialOccasionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BookingDateTime {
            get {
                return this.BookingDateTimeField;
            }
            set {
                if ((this.BookingDateTimeField.Equals(value) != true)) {
                    this.BookingDateTimeField = value;
                    this.RaisePropertyChanged("BookingDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookingID {
            get {
                return this.BookingIDField;
            }
            set {
                if ((this.BookingIDField.Equals(value) != true)) {
                    this.BookingIDField = value;
                    this.RaisePropertyChanged("BookingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherDetails {
            get {
                return this.OtherDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherDetailsField, value) != true)) {
                    this.OtherDetailsField = value;
                    this.RaisePropertyChanged("OtherDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartyNumber {
            get {
                return this.PartyNumberField;
            }
            set {
                if ((this.PartyNumberField.Equals(value) != true)) {
                    this.PartyNumberField = value;
                    this.RaisePropertyChanged("PartyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpecialOccasion {
            get {
                return this.SpecialOccasionField;
            }
            set {
                if ((this.SpecialOccasionField.Equals(value) != true)) {
                    this.SpecialOccasionField = value;
                    this.RaisePropertyChanged("SpecialOccasion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookingServiceRef.IBookingService")]
    public interface IBookingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateBooking", ReplyAction="http://tempuri.org/IBookingService/CreateBookingResponse")]
        bool CreateBooking(RSMS.BookingServiceRef.Booking pBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateBooking", ReplyAction="http://tempuri.org/IBookingService/CreateBookingResponse")]
        System.Threading.Tasks.Task<bool> CreateBookingAsync(RSMS.BookingServiceRef.Booking pBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateBooking", ReplyAction="http://tempuri.org/IBookingService/UpdateBookingResponse")]
        bool UpdateBooking(RSMS.BookingServiceRef.Booking pBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateBooking", ReplyAction="http://tempuri.org/IBookingService/UpdateBookingResponse")]
        System.Threading.Tasks.Task<bool> UpdateBookingAsync(RSMS.BookingServiceRef.Booking pBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CancelBooking", ReplyAction="http://tempuri.org/IBookingService/CancelBookingResponse")]
        bool CancelBooking(System.Guid pBookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CancelBooking", ReplyAction="http://tempuri.org/IBookingService/CancelBookingResponse")]
        System.Threading.Tasks.Task<bool> CancelBookingAsync(System.Guid pBookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBooking", ReplyAction="http://tempuri.org/IBookingService/GetBookingResponse")]
        RSMS.BookingServiceRef.Booking GetBooking(System.Guid pBookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBooking", ReplyAction="http://tempuri.org/IBookingService/GetBookingResponse")]
        System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking> GetBookingAsync(System.Guid pBookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookingsFromPeriod", ReplyAction="http://tempuri.org/IBookingService/GetBookingsFromPeriodResponse")]
        RSMS.BookingServiceRef.Booking[] GetBookingsFromPeriod(System.DateTime pDateFrom, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookingsFromPeriod", ReplyAction="http://tempuri.org/IBookingService/GetBookingsFromPeriodResponse")]
        System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetBookingsFromPeriodAsync(System.DateTime pDateFrom, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookings", ReplyAction="http://tempuri.org/IBookingService/GetBookingsResponse")]
        RSMS.BookingServiceRef.Booking[] GetBookings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookings", ReplyAction="http://tempuri.org/IBookingService/GetBookingsResponse")]
        System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetBookingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetTableBooking", ReplyAction="http://tempuri.org/IBookingService/GetTableBookingResponse")]
        RSMS.BookingServiceRef.Booking GetTableBooking(System.Guid pBookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetTableBooking", ReplyAction="http://tempuri.org/IBookingService/GetTableBookingResponse")]
        System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking> GetTableBookingAsync(System.Guid pBookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetTableBookingsFromPeriod", ReplyAction="http://tempuri.org/IBookingService/GetTableBookingsFromPeriodResponse")]
        RSMS.BookingServiceRef.Booking[] GetTableBookingsFromPeriod(System.DateTime pDateFrom, System.DateTime pDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetTableBookingsFromPeriod", ReplyAction="http://tempuri.org/IBookingService/GetTableBookingsFromPeriodResponse")]
        System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetTableBookingsFromPeriodAsync(System.DateTime pDateFrom, System.DateTime pDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetTableBookings", ReplyAction="http://tempuri.org/IBookingService/GetTableBookingsResponse")]
        RSMS.BookingServiceRef.Booking[] GetTableBookings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetTableBookings", ReplyAction="http://tempuri.org/IBookingService/GetTableBookingsResponse")]
        System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetTableBookingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateTableBooking", ReplyAction="http://tempuri.org/IBookingService/CreateTableBookingResponse")]
        bool CreateTableBooking(System.Guid pBookingID, System.Guid[] pTables);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateTableBooking", ReplyAction="http://tempuri.org/IBookingService/CreateTableBookingResponse")]
        System.Threading.Tasks.Task<bool> CreateTableBookingAsync(System.Guid pBookingID, System.Guid[] pTables);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateTableBooking", ReplyAction="http://tempuri.org/IBookingService/UpdateTableBookingResponse")]
        bool UpdateTableBooking(System.Guid pBookingID, System.Guid[] pOldTables, System.Guid[] pNewTables);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateTableBooking", ReplyAction="http://tempuri.org/IBookingService/UpdateTableBookingResponse")]
        System.Threading.Tasks.Task<bool> UpdateTableBookingAsync(System.Guid pBookingID, System.Guid[] pOldTables, System.Guid[] pNewTables);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookingServiceChannel : RSMS.BookingServiceRef.IBookingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookingServiceClient : System.ServiceModel.ClientBase<RSMS.BookingServiceRef.IBookingService>, RSMS.BookingServiceRef.IBookingService {
        
        public BookingServiceClient() {
        }
        
        public BookingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateBooking(RSMS.BookingServiceRef.Booking pBooking) {
            return base.Channel.CreateBooking(pBooking);
        }
        
        public System.Threading.Tasks.Task<bool> CreateBookingAsync(RSMS.BookingServiceRef.Booking pBooking) {
            return base.Channel.CreateBookingAsync(pBooking);
        }
        
        public bool UpdateBooking(RSMS.BookingServiceRef.Booking pBooking) {
            return base.Channel.UpdateBooking(pBooking);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBookingAsync(RSMS.BookingServiceRef.Booking pBooking) {
            return base.Channel.UpdateBookingAsync(pBooking);
        }
        
        public bool CancelBooking(System.Guid pBookingID) {
            return base.Channel.CancelBooking(pBookingID);
        }
        
        public System.Threading.Tasks.Task<bool> CancelBookingAsync(System.Guid pBookingID) {
            return base.Channel.CancelBookingAsync(pBookingID);
        }
        
        public RSMS.BookingServiceRef.Booking GetBooking(System.Guid pBookingID) {
            return base.Channel.GetBooking(pBookingID);
        }
        
        public System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking> GetBookingAsync(System.Guid pBookingID) {
            return base.Channel.GetBookingAsync(pBookingID);
        }
        
        public RSMS.BookingServiceRef.Booking[] GetBookingsFromPeriod(System.DateTime pDateFrom, System.DateTime ToDate) {
            return base.Channel.GetBookingsFromPeriod(pDateFrom, ToDate);
        }
        
        public System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetBookingsFromPeriodAsync(System.DateTime pDateFrom, System.DateTime ToDate) {
            return base.Channel.GetBookingsFromPeriodAsync(pDateFrom, ToDate);
        }
        
        public RSMS.BookingServiceRef.Booking[] GetBookings() {
            return base.Channel.GetBookings();
        }
        
        public System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetBookingsAsync() {
            return base.Channel.GetBookingsAsync();
        }
        
        public RSMS.BookingServiceRef.Booking GetTableBooking(System.Guid pBookingID) {
            return base.Channel.GetTableBooking(pBookingID);
        }
        
        public System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking> GetTableBookingAsync(System.Guid pBookingID) {
            return base.Channel.GetTableBookingAsync(pBookingID);
        }
        
        public RSMS.BookingServiceRef.Booking[] GetTableBookingsFromPeriod(System.DateTime pDateFrom, System.DateTime pDateTo) {
            return base.Channel.GetTableBookingsFromPeriod(pDateFrom, pDateTo);
        }
        
        public System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetTableBookingsFromPeriodAsync(System.DateTime pDateFrom, System.DateTime pDateTo) {
            return base.Channel.GetTableBookingsFromPeriodAsync(pDateFrom, pDateTo);
        }
        
        public RSMS.BookingServiceRef.Booking[] GetTableBookings() {
            return base.Channel.GetTableBookings();
        }
        
        public System.Threading.Tasks.Task<RSMS.BookingServiceRef.Booking[]> GetTableBookingsAsync() {
            return base.Channel.GetTableBookingsAsync();
        }
        
        public bool CreateTableBooking(System.Guid pBookingID, System.Guid[] pTables) {
            return base.Channel.CreateTableBooking(pBookingID, pTables);
        }
        
        public System.Threading.Tasks.Task<bool> CreateTableBookingAsync(System.Guid pBookingID, System.Guid[] pTables) {
            return base.Channel.CreateTableBookingAsync(pBookingID, pTables);
        }
        
        public bool UpdateTableBooking(System.Guid pBookingID, System.Guid[] pOldTables, System.Guid[] pNewTables) {
            return base.Channel.UpdateTableBooking(pBookingID, pOldTables, pNewTables);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTableBookingAsync(System.Guid pBookingID, System.Guid[] pOldTables, System.Guid[] pNewTables) {
            return base.Channel.UpdateTableBookingAsync(pBookingID, pOldTables, pNewTables);
        }
    }
}
